{"ast":null,"code":"import TodoDataService from '../service/TodoDataService';\nexport default {\n  name: 'EditTodo',\n\n  data() {\n    return {\n      currentTodo: null,\n      message: ''\n    };\n  },\n\n  methods: {\n    getTodo(id) {\n      TodoDataService.get(id).then(response => {\n        this.currentTodo = response.data;\n      }).catch(e => {\n        alert(e);\n      });\n    },\n\n    updateTodo() {\n      TodoDataService.update(this.currentTodo.id, this.currentTodo).then(() => {\n        this.message = 'The todo was updated successfully!';\n      }).catch(e => {\n        alert(e);\n      });\n    },\n\n    deleteTodo() {\n      TodoDataService.delete(this.currentTodo.id).then(() => {\n        this.$router.push({\n          name: 'todos'\n        });\n      }).catch(e => {\n        alert(e);\n      });\n    }\n\n  },\n\n  mounted() {\n    this.getTodo(this.$route.params.id);\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,OAAOA,eAAP,MAA4B,4BAA5B;AAEA,eAAe;EACXC,IAAI,EAAE,UADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,WAAW,EAAE,IADV;MAEHC,OAAO,EAAE;IAFN,CAAP;EAIH,CAPU;;EAQXC,OAAO,EAAE;IACLC,OAAO,CAACC,EAAD,EAAK;MACRP,eAAe,CAACQ,GAAhB,CAAoBD,EAApB,EACKE,IADL,CACUC,QAAO,IAAK;QACd,KAAKP,WAAL,GAAmBO,QAAQ,CAACR,IAA5B;MACH,CAHL,EAIKS,KAJL,CAIWC,KAAK;QACRC,KAAK,CAACD,CAAD,CAAL;MACH,CANL;IAOH,CATI;;IAULE,UAAU,GAAG;MACTd,eAAe,CAACe,MAAhB,CAAuB,KAAKZ,WAAL,CAAiBI,EAAxC,EAA4C,KAAKJ,WAAjD,EACKM,IADL,CACU,MAAM;QACR,KAAKL,OAAL,GAAe,oCAAf;MACH,CAHL,EAIKO,KAJL,CAIWC,KAAK;QACRC,KAAK,CAACD,CAAD,CAAL;MACH,CANL;IAOH,CAlBI;;IAmBLI,UAAU,GAAG;MACThB,eAAe,CAACiB,MAAhB,CAAuB,KAAKd,WAAL,CAAiBI,EAAxC,EACKE,IADL,CACU,MAAM;QACR,KAAKS,OAAL,CAAaC,IAAb,CAAkB;UAAClB,IAAI,EAAE;QAAP,CAAlB;MACH,CAHL,EAIKU,KAJL,CAIWC,KAAK;QACRC,KAAK,CAACD,CAAD,CAAL;MACH,CANL;IAOJ;;EA3BK,CARE;;EAqCXQ,OAAO,GAAG;IACN,KAAKd,OAAL,CAAa,KAAKe,MAAL,CAAYC,MAAZ,CAAmBf,EAAhC;EACJ;;AAvCW,CAAf","names":["TodoDataService","name","data","currentTodo","message","methods","getTodo","id","get","then","response","catch","e","alert","updateTodo","update","deleteTodo","delete","$router","push","mounted","$route","params"],"sourceRoot":"","sources":["/Users/krystofklempir/Desktop/Work/GitHubPulls/Merge-version/HTML/src/components/EditTodo.vue"],"sourcesContent":["<template>\n    <div v-if=\"currentTodo\">\n            <div class=\"mb-3\">\n                <label for=\"title\" class=\"form-label\">Title</label>\n                <input type=\"text\" class=\"form-control\" id=\"title\" required name=\"title\" v-model=\"currentTodo.title\">\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"day\" class=\"form-label\">Day</label>\n                <input type=\"text\" class=\"form-control\" id=\"day\" required name=\"day\" v-model=\"currentTodo.day\">\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"time\" class=\"form-label\">Time</label>\n                <input type=\"time\" class=\"form-control\" id=\"time\" required name=\"time\" v-model=\"currentTodo.time\">\n            </div>\n            <div class=\"mb-3\">\n                <button @click=\"updateTodo\" class=\"btn btn-primary me-3\">Update</button>\n                <button @click=\"deleteTodo\" class=\"btn btn-danger\">Delete</button>\n            </div>\n             <div class=\"alert alert-success\" role=\"alert\" v-if=\"message\">\n                {{message}}\n            </div>\n    </div>\n</template>\n\n<script>\nimport TodoDataService from '../service/TodoDataService'\n\nexport default {\n    name: 'EditTodo',\n    data() {\n        return {\n            currentTodo: null,\n            message: ''\n        }\n    },\n    methods: {\n        getTodo(id) {\n            TodoDataService.get(id)\n                .then(response => {\n                    this.currentTodo = response.data\n                })\n                .catch(e => {\n                    alert(e)\n                })\n        },\n        updateTodo() {\n            TodoDataService.update(this.currentTodo.id, this.currentTodo)\n                .then(() => {\n                    this.message = 'The todo was updated successfully!'\n                })\n                .catch(e => {\n                    alert(e)\n                })\n        },\n        deleteTodo() {\n            TodoDataService.delete(this.currentTodo.id)\n                .then(() => {\n                    this.$router.push({name: 'todos'})\n                })\n                .catch(e => {\n                    alert(e)\n                })\n        }\n    },\n    mounted() {\n        this.getTodo(this.$route.params.id)\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}